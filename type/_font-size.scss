@mixin font-size-internal-src($size-namespace:""){
  /**
   * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
   *
   * Double-stranded heading hierarchy.
   */


	.#{$size-namespace}alpha   { @include font-size(base(h1-size), true); }
	.#{$size-namespace}beta    { @include font-size(base(h2-size), true); }
	.#{$size-namespace}gamma   { @include font-size(base(h3-size), true); }
	.#{$size-namespace}delta   { @include font-size(base(h4-size), true); }
	.#{$size-namespace}epsilon { @include font-size(base(h5-size), true); }
	.#{$size-namespace}zeta    { @include font-size(base(h6-size), true); }

  /**
   * A series of classes for setting massive type; for use in heroes, mastheads,
   * promos, etc.
   */
  .#{$size-namespace}giga { @include font-size(base(giga-size), true); }
  .#{$size-namespace}mega { @include font-size(base(mega-size), true); }
  .#{$size-namespace}kilo { @include font-size(base(kilo-size), true); }

  /**
   * A series of classes for setting tiny type; for use in smallprint etc.
   */
  .#{$size-namespace}smallprint,
  .#{$size-namespace}milli { @include font-size(base(milli-size), true); }
  .#{$size-namespace}micro { @include font-size(base(micro-size), true); }

}

@mixin font-size-src($display-namespace:"") {
  html, body { @include font-size(base(font-size), true); }
  h1 { @include font-size(base(h1-size), true); }
  h2 { @include font-size(base(h2-size), true); }
  h3 { @include font-size(base(h3-size), true); }
  h4 { @include font-size(base(h4-size), true); }
  h5 { @include font-size(base(h5-size), true); }
  h6 { @include font-size(base(h6-size), true); }

  @include font-size-internal-src($display-namespace);

  @each $alias, $condition in $breakpoints {
    @if use-mq($alias, sizes) {
      @include media-query(#{$alias}) {
        @include font-size-internal-src('#{$alias}--');
      }
    }
  }
}
